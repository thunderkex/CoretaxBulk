name: Create Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Generate version and release info
        id: version
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            # For tag pushes, use the tag name
            TAG="${{ github.ref_name }}"
            VERSION=${TAG#v}
            echo "tag=$TAG" >> $GITHUB_OUTPUT
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "release_name=CoreTax Bulk Download v$VERSION" >> $GITHUB_OUTPUT
          else
            # For manual triggers or branch pushes, generate version
            CURRENT_VERSION="2.1.0"
            if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
              VERSION_TYPE="${{ github.event.inputs.version_type }}"
            else
              VERSION_TYPE="patch"
            fi
            
            # Simple version bumping
            IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
            MAJOR=${VERSION_PARTS[0]}
            MINOR=${VERSION_PARTS[1]}
            PATCH=${VERSION_PARTS[2]}
            
            case $VERSION_TYPE in
              "major")
                MAJOR=$((MAJOR + 1))
                MINOR=0
                PATCH=0
                ;;
              "minor")
                MINOR=$((MINOR + 1))
                PATCH=0
                ;;
              "patch")
                PATCH=$((PATCH + 1))
                ;;
            esac
            
            NEW_VERSION="$MAJOR.$MINOR.$PATCH"
            TAG="v$NEW_VERSION"
            
            echo "tag=$TAG" >> $GITHUB_OUTPUT
            echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
            echo "release_name=CoreTax Bulk Download v$NEW_VERSION" >> $GITHUB_OUTPUT
          fi
      
      - name: Create Chrome extension package
        run: |
          cd chrome
          zip -r ../CoreTax-Bulk-Download-Chrome-v${{ steps.version.outputs.version }}.zip . -x "*.git*"
      
      - name: Create Firefox extension package
        run: |
          cd firefox
          zip -r ../CoreTax-Bulk-Download-Firefox-v${{ steps.version.outputs.version }}.zip . -x "*.git*"
      
      - name: Create source code package
        run: zip -r CoreTax-Bulk-Download-Source-v${{ steps.version.outputs.version }}.zip . -x "*.git*" ".github/*"
      
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            CoreTax-Bulk-Download-Chrome-v${{ steps.version.outputs.version }}.zip
            CoreTax-Bulk-Download-Firefox-v${{ steps.version.outputs.version }}.zip
            CoreTax-Bulk-Download-Source-v${{ steps.version.outputs.version }}.zip
          tag_name: ${{ steps.version.outputs.tag }}
          name: ${{ steps.version.outputs.release_name }}
          body: |
            ## üì¶ CoreTax Bulk Download v${{ steps.version.outputs.version }}
            
            ### üî• What's New
            - Enhanced bulk download capabilities for CoreTax documents
            - Improved filtering and history features
            - Better performance and reliability
            
            ### üì• Downloads
            - **Chrome Extension**: CoreTax-Bulk-Download-Chrome-v${{ steps.version.outputs.version }}.zip
            - **Firefox Extension**: CoreTax-Bulk-Download-Firefox-v${{ steps.version.outputs.version }}.zip
            - **Source Code**: CoreTax-Bulk-Download-Source-v${{ steps.version.outputs.version }}.zip
            
            ### üõ†Ô∏è Installation
            1. Download the appropriate extension file for your browser
            2. Extract the zip file
            3. Load the extension in developer mode
            4. Navigate to CoreTax and start bulk downloading!
            
            ---
            **Full Changelog**: https://github.com/${{ github.repository }}/compare/v${{ steps.version.outputs.previous_version }}...${{ steps.version.outputs.tag }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}